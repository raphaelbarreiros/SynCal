version: "3.9"

# Minimal Compose stack for SynCal (MVP): web, api, worker, postgres
# Notes:
# - Service build contexts are placeholders until code scaffolds land
# - DATABASE_URL inside containers points to host 'postgres'

services:
  postgres:
    image: postgres:16-alpine
    container_name: syncal-postgres
    environment:
      POSTGRES_USER: syncal
      POSTGRES_PASSWORD: syncal
      POSTGRES_DB: syncal
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER"]
      interval: 5s
      timeout: 5s
      retries: 10
    ports:
      - "5432:5432"

  api:
    # build: ../apps/api   # uncomment when code scaffold exists
    image: syncal-api:dev
    container_name: syncal-api
    depends_on:
      postgres:
        condition: service_healthy
    env_file:
      - ../.env.local
    environment:
      DATABASE_URL: postgres://syncal:syncal@postgres:5432/syncal
      API_BASE_URL: http://localhost:${PORT_API:-3001}
      APP_BASE_URL: http://localhost:${PORT_WEB:-3000}
    ports:
      - "${PORT_API:-3001}:3001"
    command: sh -c "node server.js" # placeholder

  web:
    # build: ../apps/web     # uncomment when code scaffold exists
    image: syncal-web:dev
    container_name: syncal-web
    depends_on:
      - api
    env_file:
      - ../.env.local
    environment:
      API_BASE_URL: http://api:3001
      PORT_WEB: ${PORT_WEB:-3000}
    ports:
      - "${PORT_WEB:-3000}:3000"
    command: sh -c "node server.js" # placeholder

  worker:
    # build: ../apps/worker  # uncomment when code scaffold exists
    image: syncal-worker:dev
    container_name: syncal-worker
    depends_on:
      postgres:
        condition: service_healthy
    env_file:
      - ../.env.local
    environment:
      DATABASE_URL: postgres://syncal:syncal@postgres:5432/syncal
      API_BASE_URL: http://api:3001
    command: sh -c "node worker.js" # placeholder

volumes:
  pgdata:
    driver: local
